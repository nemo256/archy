#!/usr/bin/env bash

################################################
#        Custom Arch installer script          #
################################################

# Prompt to gather data
function prompt {
    local message=$1
    local variable=$2
    local default=$3
    tput setaf 15
    read -p "${message} (default: ${default}): " value
    tput sgr0
    eval $variable=${value:-$default}
}

# Cool logo message
function logo() {
    local text=$1

    local blue=$(tput setaf 4; tput bold)
    local indigo=$(tput setaf 5; tput bold)
    local text_color=$(tput bold)

    local screen_width=$(tput cols)
    local logo="
 █████╗ ██████╗  ██████╗██╗  ██╗██╗   ██╗
██╔══██╗██╔══██╗██╔════╝██║  ██║╚██╗ ██╔╝
███████║██████╔╝██║     ███████║ ╚████╔╝ 
██╔══██║██╔══██╗██║     ██╔══██║  ╚██╔╝  
██║  ██║██║  ██║╚██████╗██║  ██║   ██║   
╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝   ╚═╝   
"
    local logo_width=$(echo "$logo" | awk '{ if (length > max) max = length } END { print max }')

    clear

    IFS=$'\n'
    printf "\n"
    for line in $logo
    do
        printf "%*s%s\n" $((($screen_width - ${#line} - 1) / 2)) "" "$indigo$line"
    done

    printf "\n%*s%s%s%*s\n\n" $((($screen_width - ${#text} - 1) / 2)) "" "$blue" "$text" $((($screen_width + ${#text} + ${#text} - $logo_width) / 2)) ""

    tput sgr0
}

# Set a bold terminus font
setfont ter-132b

logo "Press any key to continue..."
read

logo "Updating mirrorlist..."
reflector -a 48 -c France,Germany,Spain,Portugal -f 3 -l 5 --sort rate --verbose --save /etc/pacman.d/mirrorlist

logo "Enter your infos..."
prompt "Hostname" HOSTNAME macbook
prompt "Root password" MASTER_PASSWORD "None"
prompt "Username" USERNAME "None"
prompt "Password" PASSWORD "None"
prompt "Timezone" TIMEZONE "Africa/Algiers"

PS3="Select a kernel: "
select KERNEL in "linux" "linux-lts" "linux-zen" "linux-hardened"; do
  case $KERNEL in
    "") KERNEL="linux"; break;;
    "linux") KERNEL="linux"; break;;
    "linux-lts") KERNEL="linux-lts"; break;;
    "linux-zen") KERNEL="linux-zen"; break;;
    "linux-hardened") KERNEL="linux-hardened"; break;;
  esac
done

PS3="Select an audio server: "
select AUDIO_SERVER in "Pipewire (New, suitable for modern multimedia needs)" "Pulseaudio (Old, suitable for traditional Linux audio needs)"; do
    case $AUDIO_SERVER in
        "") AUDIO_SERVER="pipewire"; break;;
        "Pipewire (New, suitable for modern multimedia needs)") AUDIO_SERVER="pipewire"; break;;
        "Pulseaudio (Old, suitable for traditional Linux audio needs)") AUDIO_SERVER="pulseaudio"; break;;
    esac
done

devices=$(lsblk -o NAME,SIZE | grep -e '^sd\|^nvme')
PS3="Select a disk: "
echo "Available devices:"
options=()
while read -r line; do
    disk=$(echo $line | awk '{print $1}')
    size=$(echo $line | awk '{print $2}')
    options+=("$disk ($size)")
done <<< "$devices"
options+=("Quit")
select device in "${options[@]}"; do
    case $device in
        "") echo "Invalid selection";;
        "Quit") exit;;
        *) DISK=$(echo $device | awk '{print $1}'); break;;
    esac
done

logo "Formating Disks..."
mkdir /mnt &>/dev/null
swapoff /mnt/swapfile
umount -Af --recursive /mnt
sgdisk -Z /dev/${DISK}
sgdisk -a 2048 -o /dev/${DISK}
sgdisk -n 1::+256M  --typecode=1:AF00 --change-name=1:'BOOT' /dev/${DISK}
sgdisk -n 2::-0     --typecode=2:8300 --change-name=2:'ROOT' /dev/${DISK}
partprobe /dev/${DISK}

logo "Creating Filesystems..."
mkfs.fat -F 32 /dev/${DISK}1
fatlabel /dev/${DISK}1 BOOT
mkfs.ext4 -L ROOT /dev/${DISK}2
mount /dev/disk/by-label/ROOT /mnt
mkdir -p /mnt/boot/efi
mount /dev/disk/by-label/BOOT /mnt/boot/efi

logo "Create a swap partition 4Gb..."
dd if=/dev/zero of=/mnt/swapfile bs=1M count=1024 status=progress
chmod 600 /mnt/swapfile
chown root /mnt/swapfile
mkswap /mnt/swapfile
swapon /mnt/swapfile
if ! grep -qs '/mnt' /proc/mounts; then
  (sleep 3 && reboot )
fi

logo "Archy installation..."
pacstrap /mnt base base-devel ${KERNEL} ${KERNEL}-headers linux-firmware
genfstab -U /mnt >> /mnt/etc/fstab

logo "Installing audio server..."
if [[ $AUDIO_SERVER == "pipewire" ]]; then
  arch-chroot /mnt pacman -S --noconfirm --needed pipewire pipewire-alsa pipewire-pulse pipewire-jack wireplumber
elif [[ $AUDIO_SERVER == "pulseaudio" ]]; then
  arch-chroot /mnt pacman -S --noconfirm --needed pulseaudio pulseaudio-alsa
fi

logo "Copying the mirror list to the new system..."
cp -fvr /mnt/etc/pacman.d/mirrorlist /mnt/etc/pacman.d/mirrorlist.backup
cp -fvr /etc/pacman.d/mirrorlist /mnt/etc/pacman.d/mirrorlist

logo "Setup Language And Locale..."
arch-chroot /mnt sed -i 's/^#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
arch-chroot /mnt locale-gen
arch-chroot /mnt ln -s /usr/share/zoneinfo/${TIMEZONE} /etc/localtime
arch-chroot /mnt hwclock --systohc
arch-chroot /mnt sed -i 's/^#ParallelDownloads/ParallelDownloads/' /etc/pacman.conf

logo "Adding User..."
arch-chroot /mnt groupadd libvirt
arch-chroot /mnt useradd -m -G wheel,audio,video,libvirt -s /bin/bash --badname ${USERNAME}
ENCRYPTED_MASTER_PASSWORD=$(openssl passwd -6 -salt 'salt' ${MASTER_PASSWORD})
ENCRYPTED_PASSWORD=$(openssl passwd -6 -salt 'salt' ${PASSWORD})
arch-chroot /mnt usermod --password "${ENCRYPTED_MASTER_PASSWORD}" root
arch-chroot /mnt usermod --password "${ENCRYPTED_PASSWORD}" ${USERNAME}
echo "${HOSTNAME}" > /mnt/etc/hostname

logo "Creating GRUB Boot Menu..."
arch-chroot /mnt pacman -S --noconfirm --needed grub os-prober efibootmgr dhcpcd
arch-chroot /mnt grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=grub
sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT="[^"]*/& rootflags=data=writeback libata.force=1:noncq acpi_osi=!Darwin/' /mnt/etc/default/grub
sed -i 's/^GRUB_TIMEOUT=5/GRUB_TIMEOUT=0/' /mnt/etc/default/grub
sed -i 's/^#GRUB_DISABLE_SUBMENU=y/GRUB_DISABLE_SUBMENU=y/' /mnt/etc/default/grub
arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg

logo "Managing Essential Services..."
arch-chroot /mnt systemctl disable --now transmission.service
arch-chroot /mnt systemctl enable  --now dhcpcd.service
arch-chroot /mnt systemctl enable  --now NetworkManager.service

logo "Changing Default Console Font..."
echo -ne 'KEYMAP="us"
FONT="ter-132b"
' > /mnt/etc/vconsole.conf

logo "Add no password sudo rights..."
sed -ni "/^root/{a\
  ${USERNAME} ALL=(ALL:ALL) NOPASSWD: ALL
p}" /mnt/etc/sudoers

logo "Done - Please Eject Install Media"
# umount -R /mnt
# reboot
